package servlets;

import jakarta.servlet.ServletException;
import jakarta.servlet.http.HttpServlet;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;
import models.EditorialModel;
import models.LibroModel;

import java.io.IOException;
import java.sql.SQLException;
import java.util.List;

import entities.Editorial;
import entities.Libro;

/**
 * Servlet implementation class LibroServlet
 */
public class LibroServlet extends HttpServlet {
	private static final long serialVersionUID = 1L;
  
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		
		String action = request.getParameter("action");

		if (action == null)
			action = "listar";

		switch (action) {
		case "listar":
			listarLibros(request, response);
			break;
		case "agregar":
			try {
				agregarLibro(request, response);
				cargarEditoriales(request, response);
			} catch (Exception e) {
				e.printStackTrace();
			}
			break;
		case "mostrar":
			try {
				mostrarLibro(request, response);
			} catch (Exception e) {
				e.printStackTrace();
			}
			break;
		case "actualizar":
			try {
				actualizarLibro(request, response);
			} catch (Exception e) {
				e.printStackTrace();
			}
			break;
		case "eliminar":
			try {
				eliminarLibro(request, response);
			} catch (Exception e) {
				e.printStackTrace();
			}
			break;
		default:
			listarLibros(request, response);
			break;
		}
	}

    private void listarLibros(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		try {
			List<Libro> libros = LibroModel.listarLibros();
			request.setAttribute("libros", libros);
			request.getRequestDispatcher("listaLibros.jsp").forward(request, response);
		} catch (Exception e) {
			e.printStackTrace();
		}
    }

    private void agregarLibro(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
    	String idLibro = request.getParameter("idLibro");
        String titulo = request.getParameter("titulo");
        String autor = request.getParameter("autor");
        String idEditorial = request.getParameter("idEditorial");
        int stock = Integer.parseInt(request.getParameter("stock"));
        String estado = request.getParameter("estado");

        Libro libro = new Libro(idLibro, titulo, autor, idEditorial, stock, estado, "");
        LibroModel.agregarLibro(libro);
        listarLibros(request, response);
    }

    private void mostrarLibro(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        
    	String idLibro = request.getParameter("idLibro");
        Libro libro = LibroModel.mostrarLibro(idLibro);

        request.setAttribute("libro", libro);
        request.getRequestDispatcher("editarLibro.jsp").forward(request, response);
    }

    private void actualizarLibro(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        String idLibro = request.getParameter("idLibro");
        String titulo = request.getParameter("titulo");
        String autor = request.getParameter("autor");
        String idEditorial = request.getParameter("idEditorial");
        int stock = Integer.parseInt(request.getParameter("stock"));
        String estado = request.getParameter("estado");

        Libro libro = new Libro(idLibro, titulo, autor, idEditorial, stock, estado, "");
        LibroModel.actualizarLibro(libro);
        listarLibros(request, response);
    }

    private void eliminarLibro(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        String idLibro = request.getParameter("id");

        LibroModel.eliminarLibro(idLibro);
        listarLibros(request, response);
    }
    
    private void cargarEditoriales(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException, SQLException {
        
        try {
            List<Editorial> editoriales = EditorialModel.listarEditoriales();
            request.setAttribute("editoriales", editoriales);
            request.getRequestDispatcher("registrarLibro.jsp").forward(request, response);
        } catch (Exception e) {
            e.printStackTrace();
        }
    	/*List<Editorial> editoriales = EditorialModel.listarEditoriales();
        request.setAttribute("editoriales", editoriales);
        request.getRequestDispatcher("agregarLibro.jsp").forward(request, response);*/
    }
	
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		doGet(request, response);
	}
}
